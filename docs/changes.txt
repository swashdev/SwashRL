SwashRL official changelog

VERSION 0.035

  Version 0.035 breaks save file compatibility.

  Fixed:
   - Immobile monsters no longer move.

  Changed:
   - The color palette for the SDL terminal interface has been changed to a
     variation on the Tango color palette to provide more visible and vibrant
     colors.  The Money color pair still uses the old Green color, now
     referred to in the `init_colors` function as C_MONEY.
     See https://swash.link/images/v0.035-color-comparison.png
     for a side-by-side.
   - The deprecated Snow color pair has been removed and replaced with a
     Dead_Snow_Tree color pair, to be used to represent dead trees in snowy
     environments.
   - The Error color pair on the curses interface is now Gray on Red, rather
     than White on Red, to match the SDL terminal interface and avoid
     confusion with the Festive_Player color pair.
   - The Royal color pair is now Gold on Royal Purple, rather than Yellow on
     Royal Purple.
   - Monsters now have two character attributes: Strength and Endurance.
   - Items now have variables for Strength and Endurance bonuses, to be
     implemented at a later time.
   - The number of equipment slots for the player has been reduced to the
     following list:
      * Weapon-hand
      * Off-hand
      * Helmet
      * Armor
      * Shield
      * Boots
      * Left ring
      * Right ring
      * Necklace
      * Clothes
      * Tail
   - A monster's equipment slots are now in an associative array separate
     from the inventory.
   - A monster's wallet and inventory are now separate arrays not stored in
     a struct.
   - A monster's inventory is now a dynamic array.  In a future version of the
     software, the number of inventory slots a monster gets will be determined
     based on their species.
   - The flags used to determine an item's equipment slot and to determine the
     equipment slot on the equipment screen are now analogous and both belong
     to the `Slot` enum.
   - The player no longer gets a free festive hat if they already have an item
     equipped in the "Helmet" slot.

VERSION 0.034
Finalized on 2021-01-28 22:30 CST

  Corrections:
   - In the version 0.033 release, the copyright year in LICENSE.txt was noted
     as 2015-2020.  The correct copyright should have been 2015-2021.

  Removed:
   - The OpenDyslexic Mono font and settings used to activate it have been
     expunged from the program.  It was a good idea but it didn't really work
     out so well.  Maybe in the future I'll figure out a better way to
     implement it.

VERSION 0.033
Finalized on 2021-01-27 18:26 CST

  Save files from version 0.032 and earlier will not be compatible with this
  or future versions of SwashRL.

  Corrections:
   - The previous version was referred to as 0.32 in this changelog.  The
     actual version number was 0.032.

  Fixed:
   - Terrestrial monsters can no longer walk across water diagonally by
     taking advantage of poor collision detection.
   - Killing a monster no longer causes a range error by decrementing the
     array index while still accessing elements in the array.
   - The player now picks up items using the proper hand.  In previous
     commits, due to a typo, the player would always pick up all items in the
     weapon-hand.  Now the player will only pick up items in the weapon-hand
     if the item is a weapon OR the off-hand is already full.
   - The player no longer drowns after attacking a monster on a water tile.
     Instead, the movement function returns after the monster is attacked.

  Changed:
   - The flags used to determine monster behavior and item types have been
     altered substantially, making the code much more readable and consistent.
   - Monster AI has been improved slightly, allowing the monster to do
     collision detection multiple times per turn.  This also prevents the
     goobling from using hax to walk across water diagonally.
   - Random number generator functions have been rewritten to be significantly
     more consistent and reduce the number of redundant or unnecessary
     functions.  Unique functions used to simulate real non-standardized dice
     like the d10 or the d100 remain, but everything else now uses `d` or
     `roll`.
   - Following feedback on the general readability of the source code, a new
     style guide has been written and the source code has been made (mostly)
     compliant with it.  The Style Guide is included at the bottom of the
     Guidelines for Contributors. (docs/CONTRIBUTING.md)
   - `keymap` is now no longer just a name used internally by comment lines
     but an actual alias.  This is to make it moderately easier to alter what
     a keymap is later on, but also to make the code that little bit more
     readable.
   - Items can now stack if their `stacks` variable is set to true.  An item's
     `count` is now the variable used to determine if an item is in a
     particular place or inventory slot.
   - Items which are in stacks are now counted in some situations (e.g. a
     stack of 32 gold pieces is now referred to as "32 gold pieces" rather
     than "a gold piece") and are now crudely pluralized (e.g. "gold pieces"
     rather than "gold piece").

  Added:
   - The player can now drop items.  By pressing the 'd' key, he will be able
     to drop an item from his weapon-hand or off-hand.  If only one hand has
     an item in it, it will be dropped automatically.  Alternatively, the
     player can drop items from the equipment screen by selecting a slot and
     then pressing the 'd' key when the "Drop" option comes up.

VERSION 0.32
Finalized 2020-09-11 17:28 CDT

  Save files from version 0.031 Christmas Update and earlier will are not
  compatible with this or future versions of SwashRL.

  Fixed:
   - The SDL terminal interface now inverts colors correctly.

  Added:
   - The OpenDyslexic Mono font, used to create a more readable interface for
     dyslexic users, has been added.  It is activated by the DYSLEXIA option
     in config.d
   - Debug builds can now access a color test screen by passing in
     --test-colors or --test-color in the command line.
   - Many many new color pairs have been defined.  Most of them are not
     currently in use but many are reserved for planned features to be
     included in later versions of SwashRL.

  Changed:
   - Default fonts for the SDL terminal interface are now defined in an enum
     named TileSet, which stores structs containing the filepath to a font
     file and the ideal height and weight for that font.
   - Whether or not the message line and status bar use a bolder font is now
     determined by a configuration setting in config.d rather than being
     hard-coded.
   - Substantial changes have been made to the way colors are stored.  SDL
     colors and curses color codes are now saved in a `Color` class, and color
     pairs are defined in a `Color_Pair` class.  `Color_Pair` objects also
     specify whether the color pair should be boldened and/or reversed in the
     curses interface.
   - Tiles, items, and monsters now store an enum of type `Colors` in order to
     instruct display functions on what color pair to use.  Saved files also
     save and load these enums rather than taking in the full color data.
   - While wearing the festive hat, the player is now displayed in white-on-
     red rather than black-on-red.
   - The player character is now orange in the SDL terminal interface and is
     bright white in the curses interface.  The reason for the difference is
     that the closest thing to orange that curses normally supports is "bright
     red," which is not suitable on most terminal color schemes, so instead a
     traditional color is used.

  Corrections:
   - The changelog for the Version 0.032 Christmas Update stated that the
     player would be greeted on October and listed the date as 10-31.  In
     fact, the game refers to this holiday as Halloween.

VERSION 0.031 Christmas Update
Finalized 2019-12-21 23:02 CST

  Added:
   - The player will now receive a free "festive hat" item if they start a new
     game during the month of December.
   - The player will now receive appropriate season's greetings on New Year's
     Eve/Day (12-31 to 01-01), Hanami (04-08), October (10-31), and Christmas
     Eve/Day (12-24 to 12-25).

  Changed:
   - The function which draws the player in the curses and SDL terminal
     interfaces will now draw them in the color of the "festive hat" if they
     are wearing one, except the colors will be inverted in order to better
     highlight the player's position.

  Fixed:
   - A bug which caused items to fit into inappropriate equipment slots has
     been fixed.  The bug was caused by the item's equipment flag being
     cast to a boolean before being checked, rather than the result of
     the check being cast.

VERSION 0.031
Finalized 2019-12-21 19:52 CST

  Changed:
   - Rooms in the map are now connected randomly.

VERSION 0.030-1
Finalized 2019-09-01 16:53 CST
 A minor release correcting an error made while copying and pasting the
 license notice into the repository and the source code files within.  An
 explanation for this error can be found within this snippet from the git
 logs:

    When I copied and pasted the BSD 3-clause license I neglected to check
    if any alterations had been made to the warranty and liability
    disclaimer.  As it happens there were, so I have to fix that now.

VERSION 0.030
Finalized 2019-09-01 19:38 CST
  SwashRL is now licensed under the BSD Revised License.

  Changed:
   - New map generation algorithm, as well as a generic generate_new_map
     function which can be used later on as a function which will allow us to
     choose or randomly select a map generation algorithm.

VERSION 0.029-1
Finalized 2019-01-29 13:10 CST
  A minor release correcting small errors in the documentation from version
  0.029 and moving some of the code around in iomain.d for consistency.

VERSION 0.029
Finalized 2019-01-28 17:54 CST

  Changed:
   - Numerous improvements to the inventory management code
   - The inventory screen (the "bag") and the equipment screen are now clearly
     separated in the code base
   - The drawing and control functions for the equipment and inventory screens
     are now clearly separated
   - The inventory screen now exits immediately if the inventory is empty or
     no further transactions are possible.
   - Instructions given on the equipment screen now clearly tell the player
     how to interact with their equipment slots and change depending on what
     function the player is currently performing (i.e. whether they're
     "grabbing" or "swapping"/"moving" items)

  Added:
   - New "equipment key," e by default, to get to the equipment screen.  The
     inventory key now functions as a shortcut to get to the "bag" in the
     equipment screen.

  Fixed:
    - Garbage output on the message line at the start of the program has been
      fixed.  The message line will now be blank at the beginning of the game.

  Known Bugs or Oversights:
   - Oversight:  Taking items out of the inventory and placing them in the
     hands does not cost any turns.

VERSION 0.028
Finalized 2018-11-27 19:58 EST

  Changed:
   - The --help message and version number disclosure message now state the
     name of the executable, rather than simply SwashRL, to make it easier to
     change the name of the program later.
   - Mold and blood are now visible when field-of-vision is turned off.
   - The player no longer has their own struct, and is instead defined as a
     monst.
   - The special exception to the Apache License 2.0 has been reworded to be
     more clear and rigorous.

  Added:
   - If INCLUDE_COMMIT is true at compile time, the version number output by
     the 'v' key and the --help command line argument will include the current
     commit ID.
   - Added a NAME flag in global.d so that source modders can change the name
     of the game super easily.
   - Cheat modes: type --dqd in the command line for godmode, --spispopd for
     noclip, --esm to instantly kill all monsters, and/or --eoa to see the
     whole map.  Noclip also reveals the whole map.

  Fixed:
   - The test map no longer causes an error by attempting to grow mold when
     the mold flag is turned off.
   - iocurses.d no longer generates errors due to undeclared "format" calls
   - The curses interface now uses the correct colors
   - The -S (SDL mode) command-line argument has been changed to -m (short for
     "mode") in order to fix the broken -s ("load save") command-line argument

VERSION 0.027
Finalized 2018-08-19 07:19 EST

  Added:
   - Mold is now randomly generated and decorates dungeon floors and walls
   - Players and monsters now bleed when hit in combat

VERSION 0.026
Finalized 2018-08-19 04:53 EST

  Changed:
   - The "quit" command now prompts for confirmation before exiting.
   - Pressing the "close window" button in the SDL terminal interface now
     causes the program to quit immediately, without a "See you later"
     message.

  Added:
   - The ability to save and load in maps has been implemented.
   - A command line argument for loading saved maps has been added.
   - A "Save" command has been added.

VERSION 0.025
Finalized 2018-08-10 03:29 EST

  Known bugs:
   - The curses interface doesn't display "seen" tiles when they leave the
     field-of-view.

  Changed:
   - The map is now displayed in such a way that map tiles which have already
     been seen are drawn in the normal display functions.  This allows the
     player to fill out the map by exploring.  Items and monsters are only
     displayed if they are currently in the player's line-of-sight.
   - After extensive testing, it has been determined that the current map
     generation code does not produce errors, so the annoying debug messages
     have been removed.
   - The test map is now available for debug builds, rather than requiring a
     special "testmap" version, and can be accessed by running the game with
     command-line argument --test-map
   - Functions which might cause the program to quit immediately, such as SDL
     initialization or keymapping, have been moved to an earlier place in the
     program so that the player doesn't have to wait for the SDL interface to
     initialize before the program gives an error message.

  Added:
   - Color support.  Color is supported by both the curses and SDL interfaces.
   - Configuration options to determine the font and tile size in the SDL
     interface.
   - Configuration settings to determine the font and character size.
   - Bold version of the DejaVu Sans Mono font, as on option for the user.
   - Messages, such as the message line and status bar, are now printed using
     the Bold version of DejaVu Sans Mono to make them more clear on the small
     default tile size.

VERSION 0.024
Finalized 2018-08-05 02:23 EST

  The name of the game has been changed from Spelunk! to SwashRL to avoid
  confusion with the popular indie platformer Spelunky.

  The game is now licensed under the Apache License 2.0.  See README.MD for
  details.

  Windows support is back online.

  Changed:
   - Display functions are now placed in a class which can be swapped out to
     change the display method
   - Key mappings are now stored in a hashmap, and functions used to generate
     such hashmaps are added to allow source divers to add their own keymaps.
   - The message buffer is now a linked list, allowing for a dynamically sized
     buffer and some better underlying source code.
   - The USE_BLINK configuration option has been removed due to not having any
     effect.
   - The "change controls" key has been changed from F12 to '@' to keep it
     working in SDL.
   - The test map now only appears if the program is compiled with version
     "testmap"

  Added:
   - SDL support, with SDL being the default display method
   - Command line arguments have been added which allow the user to choose a
     display method at runtime
   - Multiple configurations which allow dub to build the program with or
     without curses or SDL support
   - A detailed help screen now appears when the user types '?'.  The previous
     "help" prompt new tells the user how to reach this screen.
   - Rudimentary map gen algorithm.

VERSION 0.023
Finalized 2017-12-05 22:30 EST

  Fixed:
   - Fixed the missing semicolons that were preventing version 0.022 from
     compiling.

VERSION 0.022
Finalized 2017-12-05 21:45 EST

  With version 0.022, the source code was rewritten from C to D in order to
  unlock better functionality.  Unfortunately this broke support for PDCurses,
  rendering this version of the code unable to run on Windows.  An effort was
  made to fix this but due to a computer failure the code was lost.  Windows
  support has been temporarily postponed.

  Fixed:
   - Messages are now formatted properly and no longer consist of static
     strings.

  Changed:
   - The system the code is being compiled on now auto-detects and imports
     some modules according to what system "version" is being compiled.

VERSION 0.021
Finalized 2017-09-02 02:36 EST

Fixed:
 - Monsters are no longer rendered invisible if USE_FOV is undefined.

Changed:
 - Tiles are now defined as structs rather than abstract bitmaps.
 - Improvements to the operating system detection code.

Added:
 - Player now has an inventory made up of several body slots and can pick up
   items.
 - The inventory screen has been implemented, from which the player can move
   items around.
 - Some new items have been added to the test map to test inventory slots.
   These are still buggy.

VERSION 0.020-1
Finalized 2017-03-05 21:55 EST

Changed:
 - Field of vision code has been swapped to the libtcod implementation of the
   recursive shadowcasting algorithm I was trying to implement.  See
   3rdparty.txt for details.

VERSION 0.020
Finalized 2017-03-05 17:48 EST

Changed:
 - Running into a wall no longer counts as a turn
 - Incredibly rudimentary field-of-vision implemented; needs fine-tuning. See
   todo.txt.

Code changes:
 - The code now detects automatically if it is being compiled on Windows (or,
   begrudgingly, cygwin) (courtesy of Elronnd)
 - Tiles are now bitmasks rather than integer flags, with each bit determining
   something about the tile's behavior.  Colission detection has been modified
   to use these bitmasks.
 - Whether or not a tile's colors are reversed is now determined by a bit
   TILE_INVERT rather than whether or not the tile is a wall.

VERSION 0.019
Finalized 2017-02-22 22:04 EST

Added:
 - Capability to switch between two sets of movement controls by pressing F12:
   first one is standard hjklyubn, second one is "alternate" hjkluinm,
   designed for people who often transition between typing and playing.
 - Further rewrites to key-handling code to handle a variety of control
   mechanisms

Changed:
 - More concise random number generation code; default die is now d6, removed
   lots of unnecessary functions, changed others.

VERSION 0.018
Finalized 2017-01-29 22:28 EST

Added:
 - Rudimentary items.  The current implementation is flimsy because it
   requires that the game read the object's symbol as '\0' in order to
   determine that there is no item here.  This is because pointers in C are
   stupid.
 - The version command now displays a 'd' if `DEV_RELEASE' is non-zero.

Removed:
 - Monsters no longer blink.

Fixed:
 - Message formatting now sort of works.  The fix involves a kludge in which
   the message is output directly to the screen using `mvprintw' and then
   scanned into a buffer using `mvinch', which is then passed to the message
   buffer.  Messages will be truncated if they contain more than three spaces
   in a row and are limited to 80 characters when using this method.

VERSION 0.017
2017-01-22 18:02 EST

New version numbering system R.N is now being used, wherein R is the release
number and N is the three-digit revision number.

I have given up on getting formatted messages to work.  It was between not
having a message buffer or using "It attacks you" instead of "the %s attacks
you," and I chose to keep the message buffer.  We can figure this out later.

Added:
 - Experimental feature in which monsters blink (if USE_BLINK is defined).  In
   future, the blink effect will be used only for monsters who are actively
   hostile.
 - The capability for certain actions, such as displaying help and the version
   number command, to not count as a move has been implemented, albeit rather
   messily.
 - New player commands:
    Wait ('.' or '5')
    Clear Messages (' ')
    Previous Messages ('P')

Fixed:
 - Ironed out the last issues in the message buffer.  Because it was bumping
   messages backwards, only odd-numbered messages were being queued properly.
   The changelog note indicating that the message buffer was fully functional
   in 0.0.16 was in error.
 - Re-enabled special effects in text.  The nature of the bug is still unknown
   to me, but I believe it is because I chose to use a macro named ANY_CURSES,
   which might have been used by pdcurses or ncurses without my knowledge.

Minor fixes:
 - Code which had been included in version 0.0.16 for a non-curses version of
   the game has been fully disabled.  It will be re-enabled later when
   non-curses display has been implemented.

Known bugs:
 - The game sometimes skips buffered messages on player death.

VERSION 0.0.16
Finalized 2017-01-20 23:04 EST

Known bugs:
 - I somehow managed to disable all text effects.

Fixed:
 - The message buffer is now fully functional.  At the end of every turn, the
   game will show you every message that it has generated one at a time.

Minor fixes:
 - The map is now stored statically in anticipation of code rewrites that will
   need to happen for non-curses versions of the game in the future.

VERSION 0.0.15
Finalized 2017-01-20 20:41 EST

The name FORRNIF was changed to Spelunk! on version 0.0.15 as the plan for the
game changed.  FORRNIF will return later.  If you have access to the source
code and are wondering why the name FORRNIF pops up in places, it's because
the name changed at this point during development.

Known bugs:
 - The message buffer is still broken, still for reasons unknown.  Fixes have
   been deferred to version 0.0.16 so as not to lose the compliance changes
   made in this version.
 - Because of difficulty getting strings to format properly with the new
   message buffer functions, all messages seen in the game are hard-coded.
   These fixes have again been deferred to 0.0.16.

Fixes:
 - All source code comments now use "block comments" rather than line comments
   in order to be compliant with early versions of C which do not allow line
   comments.
 - Source code has been reworked to be fully compliant with C89.  Luckily this
   took minimal effort.  It has been verified by me that the code works as
   intended when compiling under C89, C99, or C11.

Minor fixes:
 - The status bar has been moved to the top of the screen so that it may be
   manipulated at the same time as the message line on more rudimentary
   systems.  This is because of road bumps encountered in the process of
   implementing the message buffer.
 - Some code has been added to allow use of data types introduced in C99, such
   as booleans and standardized explicit-size integers, if you compile with
   the C99 standard.
 - Additional code has been added to allow the program to recognize if it is
   being compiled with the C95 or C11 standards, but no code has been
   implemented as yet which uses these checks and gcc does not recognize C95.
 - The game will now refuse to compile with ncurses for Windows, as ncurses
   does not support Windows.

VERSION 0.0.14
Finalized 2017-01-17 23:07 EST

Added:
 - The game now has a rudimentary status bar and message line.  The map has
   changed size to accomodate this change.

Known bugs:
 - Some of the game's "move" functions have hard-coded values that draw
   sections of the screen.  Since the map has been resized, these now give
   inappropriate screen coordinates and will erroneously draw or fail to draw
   the player in the correct place or reposition the cursor to the wrong spot.
 - Some of the message lines require an unreasonable amount of key presses to
   clear the screen, which may result in players accidentally "resting."

VERSION 0.0.13
Finalized 2017-01-17 15:13 EST

Minor fixes:
 - Random number generator has been implemented.  Unlike other random number
   generators out there, this one is specifically designed to emulate the
   rolling of dice.
 - Monster hit points are now determined by "hit dice," and they now store
   their own "attack dice," which determine how hard they hit.
 - Your hit points are now determined by "hit dice," and you now store your
   own "attack dice," which determine how hard you hit.
 - Monster and player attack rolls have now been implemented; starting HP and
   attack strength are now random.  Crits and botches have not yet been
   implemented.

VERSION 0.0.12
Finalized 2016-12-27 17:14 EST

Minor fixes:
 - Monsters now collide with each other rather than stacking
 - The version number is now displayed upon a press of the 'v' key

VERSION 0.0.11
Finalized 2015-10-04 19:59 EST

Bugfixes:
 - Fixed an attrocious error in the movement code which attempted to gather
   tile data from monsters rather than the map.  This prevented version 0.0.10
   from compiling.
 - Fixed a bug causing monsters not to display because the array size rather
   than the monster index was being incremented in the display code.  This had
   previously not been noticed in versions where only one monster was present
   in the testing arena.

Minor fixes:
 - Altered monster AI code so that it is handled by the map.  This puts maps
   in charge of the monsters so that individual monsters do not have to be
   pulled from the map data in order to be instructed to make their move.
 - Added the ability to simply remove a monster from map data so that it is no
   longer present after being slain.

Added:
 - Added a batch file, compwin.bat, which will automatically compile FORRNIF
   for Windows and place it in the bin directory.  This was for my own
   convenience as the gcc command required to compile is curiously specific and
   I kept forgetting the order of operations.

VERSION 0.0.10 was finalized on 2015-09-04 at 17:13 EST
VERSION 0.0.9 was finalized on 2015-09-04 at 12:13 EST
VERSION 0.0.8 was finalized on 2015-09-03 at 21:43 EST
VERSION 0.0.7 was finalized on 2015-09-02 at 10:23 EST
VERSION 0.0.6 was finalized on 2015-08-30 at 19:36 EST
VERSION 0.0.5 was finalized on 2015-08-29 at 17:58 EST
VERSION 0.0.4 was finalized on 2015-08-30 at 14:44 EST
VERSION 0.0.3 was finalized on 2015-08-24 at 21:29 EST
VERSION 0.0.2 was finalized on 2015-08-24 at 20:14 EST
VERSION 0.0.1 was finalized on 2015-08-24 at 14:10 EST
VERSION 0.0.0 was finalized on 2015-08-24 at 12:31 EST
